devtools::install_github("crsh/citr")
tools::install_github("crsh/citr")
library("psych")
knitr::opts_chunk$set(echo = TRUE)
library("psych")
library("outliers")
library("car")
library("e1071")
library("tidyverse")
library("papaja")
library("citr")
# For the plot
library("ggdist")
library("tidyquant")
library("ggdist")
library("ggthemes")
# For citations
library("citr")
library("papaja")
# This function is a wrapper for an HTML-style text-color change and improves readibility
colorize <- function(x, color = "red") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
# From the selections
dv <- "drp"
iv <- "g"
dv_var <- as.matrix(data[,dv])
if (alternative == "two.sided") {
alternative_text <- "The report below is for a two-sided test, that is, the alternative hypothesis does not state the direction of the effect."
} else if (alternative == "greater") {
alternative_text <- "The report below is for a one-sided greater test, that is, the alternative hypothesis states a greater impact in the direction of the effect than the control group."
} else if (alternative == "less") {
alternative_text <- "The report below is for a one-sided lesser test, that is, the alternative hypothesis states a lesser impact in the direction of the effect than the control group."
}
# EJ Data
data <- read_csv("AutoStatExample2.csv")
# From the selections
dv <- "drp"
iv <- "g"
dv_var <- as.matrix(data[,dv]) # Error in data[, dv] : object of type 'closure' is not subsettable
iv_var <- as.matrix(data[,iv])
test_type <- "t.test"
normality_check <- TRUE
equal_var_check <- c("Brown-Forsythe", "Levene's")[1]
alternative <- c("two.sided", "greater", "less")[1]
## Additional Statistics
location <- TRUE
location_ci <- NULL
effect_size_name <- c("Cohen's d", "Glass' Delta", "Hedges' g")[1]
effect_ci <- 0.95
descriptives <- TRUE
descriptive_plots <- FALSE
bar_plots <- FALSE
raincloud_plots <- TRUE
VovkSellkeMPR <- function(p){
MPR <- ifelse(p >= 1/exp(1), 1, 1/(-exp(1)*p*log(p)))
pTwoSided <- ifelse(p>=0.5,(1-p)*2,p*2)
return(VovkSellkeMPR(pTwoSided)*2*(1-p))
}
VovkSellkeMPROneSided <- function(p){
stop("This function should not be used. In for reference.")
pTwoSided <- ifelse(p>=0.5,(1-p)*2,p*2)
return(VovkSellkeMPR(pTwoSided)*2*(1-p))
}
missing_vals <- "per dependent variable"
# From JASP ttestindependentsamplesWrapper
# https://github.com/jasp-stats/jaspTTests/blob/fdf5c7a973bd83a8140335847c234e2abc07defe/R/ttestindependentsamplesWrapper.R
# data = NULL
# formula = NULL
# alternative = "twoSided"
# barPlot = FALSE
# barPlotCiLevel = 0.95
# barPlotErrorType = "ci"
# barPlotYAxisFixedToZero = TRUE
# dependent = list()
# descriptives = FALSE
# descriptivesPlot = FALSE
# descriptivesPlotCiLevel = 0.95
# effectSize = FALSE
# effectSizeCi = FALSE
# effectSizeCiLevel = 0.95
# effectSizeType = "cohen"
# equalityOfVariancesTest = FALSE
# equalityOfVariancesTestType = "brownForsythe"
# group = ""
# meanDifference = FALSE
# meanDifferenceCi = FALSE
# meanDifferenceCiLevel = 0.95
# naAction = "perDependent"
# normalityTest = FALSE
# plotHeight = 300
# plotWidth = 350
# raincloudPlot = FALSE
# raincloudPlotHorizontal = FALSE
# student = TRUE
# vovkSellke = FALSE
# welch = FALSE
# wilcoxon = FALSE
if (alternative == "two.sided") {
alternative_text <- "The report below is for a two-sided test, that is, the alternative hypothesis does not state the direction of the effect."
} else if (alternative == "greater") {
alternative_text <- "The report below is for a one-sided greater test, that is, the alternative hypothesis states a greater impact in the direction of the effect than the control group."
} else if (alternative == "less") {
alternative_text <- "The report below is for a one-sided lesser test, that is, the alternative hypothesis states a lesser impact in the direction of the effect than the control group."
}
# This code chunk needs to be before any reference to the statistic itself.
ttest <- t.test(data = data, dv_var~iv_var, var.equal = TRUE, alternative = alternative, conf.level = effect_ci)
effect_size <- cohen.d(as.formula(paste(dv, "~", iv)), data = data) # INSERT/TODO: cohen.d uses n samples, whereas JASP uses n-2, see "num" below
# From https://github.com/jasp-stats/jaspTTests/blob/fdf5c7a973bd83a8140335847c234e2abc07defe/R/ttestindependentsamples.R
effect_size_name <- c("Cohen's d", "Glass' Delta", "Hedges' g")[1]
sds  <- tapply(dv_var, iv_var, sd, na.rm = TRUE)
ms  <- tapply(dv_var, iv_var, mean, na.rm = TRUE)
ns <- tapply(dv_var, iv_var, function(x) length(na.omit(x)))
num <-  (ns[1] - 1) * sds[1]^2 + (ns[2] - 1) * sds[2]^2
sdPooled <- sqrt(num / (ns[1] + ns[2] - 2))
if (effect_size_name == "Cohen's d") {
d <- as.numeric((ms[1] - ms[2]) / sdPooled)
} else if (options$effectSizeType == "Glass' Delta") {
d <- as.numeric((ms[1] - ms[2]) / sds[2])
# Should give feedback on which data is considered 2.
} else if (options$effectSizeType == "Hedges' g") {
a <- sum(ns) - 2
logCorrection <- lgamma(a / 2) - (log(sqrt(a / 2)) + lgamma((a - 1) / 2))
d <- as.numeric((ms[1] - ms[2]) / sdPooled) * exp(logCorrection) # less biased / corrected version
}
cohen_ci <- d.ci(d,n1=21,n2=23) # INSERT/TODO Adapt the n1 and n2 depending on group sizes
